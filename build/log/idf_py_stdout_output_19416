[1/10] Performing build step for 'bootloader'
[1/1] cmd.exe /C "cd /D E:\documents\coding\active\esp32cam-idf\build\bootloader\esp-idf\esptool_py && C:\Espressif\python_env\idf5.0_py3.8_env\Scripts\python.exe C:/Espressif/frameworks/esp-idf-v5.0/components/partition_table/check_sizes.py --offset 0x8000 bootloader 0x1000 E:/documents/coding/active/esp32cam-idf/build/bootloader/bootloader.bin"
Bootloader binary size 0x6350 bytes. 0xcb0 bytes (11%) free.
[2/8] Building CXX object esp-idf/main/CMakeFiles/__idf_main.dir/main.cpp.obj
E:/documents/coding/active/esp32cam-idf/main/main.cpp: In function 'void sendFile(char*, uint16_t)':
E:/documents/coding/active/esp32cam-idf/main/main.cpp:69:14: warning: unused variable 'headerData' [-Wunused-variable]
   69 |     uint8_t* headerData;
      |              ^~~~~~~~~~
E:/documents/coding/active/esp32cam-idf/main/main.cpp:70:21: warning: unused variable 'header' [-Wunused-variable]
   70 |     packetHeader_t* header;
      |                     ^~~~~~
[3/8] Linking C static library esp-idf\main\libmain.a
[4/8] Generating ld/sections.ld
[5/8] Linking CXX executable esp32cam.elf
[6/8] Generating binary image from built executable
esptool.py v4.4
Creating esp32 image...
Merged 25 ELF sections
Successfully created esp32 image.
Generated E:/documents/coding/active/esp32cam-idf/build/esp32cam.bin
[7/8] cmd.exe /C "cd /D E:\documents\coding\active\esp32cam-idf\build\esp-idf\esptool_py && C:\Espressif\python_env\idf5.0_py3.8_env\Scripts\python.exe C:/Espressif/frameworks/esp-idf-v5.0/components/partition_table/check_sizes.py --offset 0x8000 partition --type app E:/documents/coding/active/esp32cam-idf/build/partition_table/partition-table.bin E:/documents/coding/active/esp32cam-idf/build/esp32cam.bin"
esp32cam.bin binary size 0xe4f60 bytes. Smallest app partition is 0x177000 bytes. 0x920a0 bytes (39%) free.
[7/8] cmd.exe /C "cd /D C:\Espressif\frameworks\esp-idf-v5.0\components\esptool_py && C:\Espressif\tools\cmake\3.24.0\bin\cmake.exe -D IDF_PATH=C:/Espressif/frameworks/esp-idf-v5.0 -D SERIAL_TOOL=C:/Espressif/python_env/idf5.0_py3.8_env/Scripts/python.exe;;C:/Espressif/frameworks/esp-idf-v5.0/components/esptool_py/esptool/esptool.py;--chip;esp32 -D SERIAL_TOOL_ARGS=--before=default_reset;--after=hard_reset;write_flash;@flash_args -D WORKING_DIRECTORY=E:/documents/coding/active/esp32cam-idf/build -P C:/Espressif/frameworks/esp-idf-v5.0/components/esptool_py/run_serial_tool.cmake"
esptool esp32 -p COM10 -b 460800 --before=default_reset --after=hard_reset write_flash --flash_mode dio --flash_freq 80m --flash_size detect 0x1000 bootloader/bootloader.bin 0x10000 esp32cam.bin 0x8000 partition_table/partition-table.bin
esptool.py v4.4
Serial port COM10
Connecting....
Chip is ESP32-D0WD-V3 (revision v3.1)
Features: WiFi, BT, Dual Core, 240MHz, VRef calibration in efuse, Coding Scheme None
Crystal is 40MHz
MAC: e0:5a:1b:d1:8c:34
Uploading stub...
Running stub...
Stub running...
Changing baud rate to 460800
Changed.
Configuring flash size...
Auto-detected Flash size: 4MB
Flash will be erased from 0x00001000 to 0x00007fff...
Flash will be erased from 0x00010000 to 0x000f4fff...
Flash will be erased from 0x00008000 to 0x00008fff...
Compressed 25424 bytes to 16281...
Writing at 0x00001000... (100 %)
Wrote 25424 bytes (16281 compressed) at 0x00001000 in 0.9 seconds (effective 226.5 kbit/s)...
Hash of data verified.
Compressed 937824 bytes to 602360...
Writing at 0x00010000... (2 %)
Writing at 0x0001a8c9... (5 %)
Writing at 0x00025357... (8 %)
Writing at 0x000306ee... (10 %)
Writing at 0x00035d6c... (13 %)
Writing at 0x0003b2ca... (16 %)
Writing at 0x00040fb3... (18 %)
Writing at 0x00046063... (21 %)
Writing at 0x0004ba8e... (24 %)
Writing at 0x0005166d... (27 %)
Writing at 0x00056d2a... (29 %)
Writing at 0x0005c2c6... (32 %)
Writing at 0x00061917... (35 %)
Writing at 0x00066c55... (37 %)
Writing at 0x0006cf3e... (40 %)
Writing at 0x00072ad3... (43 %)
Writing at 0x00078480... (45 %)
Writing at 0x0007e04a... (48 %)
Writing at 0x000836bd... (51 %)
Writing at 0x00088d6a... (54 %)
Writing at 0x0008e877... (56 %)
Writing at 0x00094149... (59 %)
Writing at 0x0009a0a5... (62 %)
Writing at 0x000a0390... (64 %)
Writing at 0x000a633f... (67 %)
Writing at 0x000ac2a6... (70 %)
Writing at 0x000b1b7f... (72 %)
Writing at 0x000b74ca... (75 %)
Writing at 0x000bce57... (78 %)
Writing at 0x000c4fbe... (81 %)
Writing at 0x000cd29d... (83 %)
Writing at 0x000d4f80... (86 %)
Writing at 0x000daa3b... (89 %)
Writing at 0x000dff53... (91 %)
Writing at 0x000e5a36... (94 %)
Writing at 0x000eaff3... (97 %)
Writing at 0x000f0730... (100 %)
Wrote 937824 bytes (602360 compressed) at 0x00010000 in 14.5 seconds (effective 517.8 kbit/s)...
Hash of data verified.
Compressed 3072 bytes to 105...
Writing at 0x00008000... (100 %)
Wrote 3072 bytes (105 compressed) at 0x00008000 in 0.1 seconds (effective 327.9 kbit/s)...
Hash of data verified.

Leaving...
Hard resetting via RTS pin...
