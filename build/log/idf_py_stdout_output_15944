[1/11] Performing build step for 'bootloader'
[1/1] cmd.exe /C "cd /D E:\documents\coding\active\esp32cam-idf\build\bootloader\esp-idf\esptool_py && C:\Espressif\python_env\idf5.0_py3.8_env\Scripts\python.exe C:/Espressif/frameworks/esp-idf-v5.0/components/partition_table/check_sizes.py --offset 0x8000 bootloader 0x1000 E:/documents/coding/active/esp32cam-idf/build/bootloader/bootloader.bin"
Bootloader binary size 0x6350 bytes. 0xcb0 bytes (11%) free.
[2/9] Building CXX object esp-idf/main/CMakeFiles/__idf_main.dir/main.cpp.obj
[3/9] Building CXX object esp-idf/main/CMakeFiles/__idf_main.dir/bluetooth.cpp.obj
[4/9] Linking C static library esp-idf\main\libmain.a
[5/9] Generating ld/sections.ld
[6/9] Linking CXX executable esp32cam.elf
[7/9] Generating binary image from built executable
esptool.py v4.4
Creating esp32 image...
Merged 25 ELF sections
Successfully created esp32 image.
Generated E:/documents/coding/active/esp32cam-idf/build/esp32cam.bin
[8/9] cmd.exe /C "cd /D E:\documents\coding\active\esp32cam-idf\build\esp-idf\esptool_py && C:\Espressif\python_env\idf5.0_py3.8_env\Scripts\python.exe C:/Espressif/frameworks/esp-idf-v5.0/components/partition_table/check_sizes.py --offset 0x8000 partition --type app E:/documents/coding/active/esp32cam-idf/build/partition_table/partition-table.bin E:/documents/coding/active/esp32cam-idf/build/esp32cam.bin"
esp32cam.bin binary size 0xe5410 bytes. Smallest app partition is 0x177000 bytes. 0x91bf0 bytes (39%) free.
[8/9] cmd.exe /C "cd /D C:\Espressif\frameworks\esp-idf-v5.0\components\esptool_py && C:\Espressif\tools\cmake\3.24.0\bin\cmake.exe -D IDF_PATH=C:/Espressif/frameworks/esp-idf-v5.0 -D SERIAL_TOOL=C:/Espressif/python_env/idf5.0_py3.8_env/Scripts/python.exe;;C:/Espressif/frameworks/esp-idf-v5.0/components/esptool_py/esptool/esptool.py;--chip;esp32 -D SERIAL_TOOL_ARGS=--before=default_reset;--after=hard_reset;write_flash;@flash_args -D WORKING_DIRECTORY=E:/documents/coding/active/esp32cam-idf/build -P C:/Espressif/frameworks/esp-idf-v5.0/components/esptool_py/run_serial_tool.cmake"
esptool esp32 -p COM10 -b 460800 --before=default_reset --after=hard_reset write_flash --flash_mode dio --flash_freq 80m --flash_size detect 0x1000 bootloader/bootloader.bin 0x10000 esp32cam.bin 0x8000 partition_table/partition-table.bin
esptool.py v4.4
Serial port COM10
Connecting.......
Chip is ESP32-D0WD-V3 (revision v3.1)
Features: WiFi, BT, Dual Core, 240MHz, VRef calibration in efuse, Coding Scheme None
Crystal is 40MHz
MAC: e0:5a:1b:d1:8c:34
Uploading stub...
Running stub...
Stub running...
Changing baud rate to 460800
Changed.
Configuring flash size...
Auto-detected Flash size: 4MB
Flash will be erased from 0x00001000 to 0x00007fff...
Flash will be erased from 0x00010000 to 0x000f5fff...
Flash will be erased from 0x00008000 to 0x00008fff...
Compressed 25424 bytes to 16281...
Writing at 0x00001000... (100 %)
Wrote 25424 bytes (16281 compressed) at 0x00001000 in 0.9 seconds (effective 224.1 kbit/s)...
Hash of data verified.
Compressed 939024 bytes to 603348...
Writing at 0x00010000... (2 %)
Writing at 0x0001a7dc... (5 %)
Writing at 0x00025266... (8 %)
Writing at 0x00030600... (10 %)
Writing at 0x00035c88... (13 %)
Writing at 0x0003b2cb... (16 %)
Writing at 0x00040f80... (18 %)
Writing at 0x00045fd9... (21 %)
Writing at 0x0004b9c3... (24 %)
Writing at 0x000515f0... (27 %)
Writing at 0x00056c70... (29 %)
Writing at 0x0005c226... (32 %)
Writing at 0x000618fe... (35 %)
Writing at 0x00066ba8... (37 %)
Writing at 0x0006cf54... (40 %)
Writing at 0x00072a6f... (43 %)
Writing at 0x000783f7... (45 %)
Writing at 0x0007e06a... (48 %)
Writing at 0x000836ae... (51 %)
Writing at 0x00088cea... (54 %)
Writing at 0x0008e6b7... (56 %)
Writing at 0x00094013... (59 %)
Writing at 0x00099feb... (62 %)
Writing at 0x0009ffa2... (64 %)
Writing at 0x000a61b5... (67 %)
Writing at 0x000ac1cb... (70 %)
Writing at 0x000b1b83... (72 %)
Writing at 0x000b7476... (75 %)
Writing at 0x000bcd95... (78 %)
Writing at 0x000c404a... (81 %)
Writing at 0x000cd27a... (83 %)
Writing at 0x000d4f55... (86 %)
Writing at 0x000da8f2... (89 %)
Writing at 0x000dff20... (91 %)
Writing at 0x000e5964... (94 %)
Writing at 0x000eaf32... (97 %)
Writing at 0x000f06dc... (100 %)
Wrote 939024 bytes (603348 compressed) at 0x00010000 in 14.5 seconds (effective 517.4 kbit/s)...
Hash of data verified.
Compressed 3072 bytes to 105...
Writing at 0x00008000... (100 %)
Wrote 3072 bytes (105 compressed) at 0x00008000 in 0.1 seconds (effective 332.2 kbit/s)...
Hash of data verified.

Leaving...
Hard resetting via RTS pin...
