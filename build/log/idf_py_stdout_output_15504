[1/12] Performing build step for 'bootloader'
[1/1] cmd.exe /C "cd /D E:\documents\coding\active\esp32cam-idf\build\bootloader\esp-idf\esptool_py && C:\Espressif\python_env\idf5.0_py3.8_env\Scripts\python.exe C:/Espressif/frameworks/esp-idf-v5.0/components/partition_table/check_sizes.py --offset 0x8000 bootloader 0x1000 E:/documents/coding/active/esp32cam-idf/build/bootloader/bootloader.bin"
Bootloader binary size 0x6350 bytes. 0xcb0 bytes (11%) free.
[2/10] Building CXX object esp-idf/main/CMakeFiles/__idf_main.dir/main.cpp.obj
E:/documents/coding/active/esp32cam-idf/main/main.cpp: In function 'void app_main()':
E:/documents/coding/active/esp32cam-idf/main/main.cpp:39:18: warning: unused variable 'callbacks' [-Wunused-variable]
   39 |     CBluetoothCB callbacks = {
      |                  ^~~~~~~~~
[3/10] Building CXX object esp-idf/main/CMakeFiles/__idf_main.dir/wifiap.cpp.obj
E:/documents/coding/active/esp32cam-idf/main/wifiap.cpp:394:26: warning: invalid suffix on literal; C++11 requires a space between literal and string macro [-Wliteral-suffix]
  394 |         ESP_LOGI(AP_TAG, "eventHandler: station "MACSTR" join, AID=%u", MAC2STR(event->mac), event->aid);
      |                          ^
E:/documents/coding/active/esp32cam-idf/main/wifiap.cpp:403:26: warning: invalid suffix on literal; C++11 requires a space between literal and string macro [-Wliteral-suffix]
  403 |         ESP_LOGI(AP_TAG, "eventHandler: station "MACSTR" leave, AID=%u", MAC2STR(event->mac), event->aid);
      |                          ^
E:/documents/coding/active/esp32cam-idf/main/wifiap.cpp: In static member function 'static uint16_t CWifiAP::startModem(CWifiCallbacks, const char*, const char*)':
E:/documents/coding/active/esp32cam-idf/main/wifiap.cpp:116:5: warning: missing initializer for member 'wifi_ap_config_t::ssid' [-Wmissing-field-initializers]
  116 |     };
      |     ^
E:/documents/coding/active/esp32cam-idf/main/wifiap.cpp:116:5: warning: missing initializer for member 'wifi_ap_config_t::password' [-Wmissing-field-initializers]
E:/documents/coding/active/esp32cam-idf/main/wifiap.cpp:116:5: warning: missing initializer for member 'wifi_ap_config_t::ssid_len' [-Wmissing-field-initializers]
E:/documents/coding/active/esp32cam-idf/main/wifiap.cpp:116:5: warning: missing initializer for member 'wifi_ap_config_t::ssid_hidden' [-Wmissing-field-initializers]
E:/documents/coding/active/esp32cam-idf/main/wifiap.cpp:116:5: warning: missing initializer for member 'wifi_ap_config_t::beacon_interval' [-Wmissing-field-initializers]
E:/documents/coding/active/esp32cam-idf/main/wifiap.cpp:116:5: warning: missing initializer for member 'wifi_ap_config_t::pairwise_cipher' [-Wmissing-field-initializers]
E:/documents/coding/active/esp32cam-idf/main/wifiap.cpp:116:5: warning: missing initializer for member 'wifi_ap_config_t::ftm_responder' [-Wmissing-field-initializers]
E:/documents/coding/active/esp32cam-idf/main/wifiap.cpp:116:5: warning: missing initializer for member 'wifi_ap_config_t::pmf_cfg' [-Wmissing-field-initializers]
[4/10] Building CXX object esp-idf/main/CMakeFiles/__idf_main.dir/bluetooth.cpp.obj
[5/10] Linking C static library esp-idf\main\libmain.a
[6/10] Generating ld/sections.ld
[7/10] Linking CXX executable esp32cam.elf
[8/10] Generating binary image from built executable
esptool.py v4.4
Creating esp32 image...
Merged 2 ELF sections
Successfully created esp32 image.
Generated E:/documents/coding/active/esp32cam-idf/build/esp32cam.bin
[9/10] cmd.exe /C "cd /D E:\documents\coding\active\esp32cam-idf\build\esp-idf\esptool_py && C:\Espressif\python_env\idf5.0_py3.8_env\Scripts\python.exe C:/Espressif/frameworks/esp-idf-v5.0/components/partition_table/check_sizes.py --offset 0x8000 partition --type app E:/documents/coding/active/esp32cam-idf/build/partition_table/partition-table.bin E:/documents/coding/active/esp32cam-idf/build/esp32cam.bin"
esp32cam.bin binary size 0x5a5a0 bytes. Smallest app partition is 0x177000 bytes. 0x11ca60 bytes (76%) free.
[9/10] cmd.exe /C "cd /D C:\Espressif\frameworks\esp-idf-v5.0\components\esptool_py && C:\Espressif\tools\cmake\3.24.0\bin\cmake.exe -D IDF_PATH=C:/Espressif/frameworks/esp-idf-v5.0 -D SERIAL_TOOL=C:/Espressif/python_env/idf5.0_py3.8_env/Scripts/python.exe;;C:/Espressif/frameworks/esp-idf-v5.0/components/esptool_py/esptool/esptool.py;--chip;esp32 -D SERIAL_TOOL_ARGS=--before=default_reset;--after=hard_reset;write_flash;@flash_args -D WORKING_DIRECTORY=E:/documents/coding/active/esp32cam-idf/build -P C:/Espressif/frameworks/esp-idf-v5.0/components/esptool_py/run_serial_tool.cmake"
esptool esp32 -p COM10 -b 460800 --before=default_reset --after=hard_reset write_flash --flash_mode dio --flash_freq 80m --flash_size detect 0x1000 bootloader/bootloader.bin 0x10000 esp32cam.bin 0x8000 partition_table/partition-table.bin
esptool.py v4.4
Serial port COM10
Connecting....
Chip is ESP32-D0WD-V3 (revision v3.1)
Features: WiFi, BT, Dual Core, 240MHz, VRef calibration in efuse, Coding Scheme None
Crystal is 40MHz
MAC: e0:5a:1b:d1:8c:34
Uploading stub...
Running stub...
Stub running...
Changing baud rate to 460800
Changed.
Configuring flash size...
Auto-detected Flash size: 4MB
Flash will be erased from 0x00001000 to 0x00007fff...
Flash will be erased from 0x00010000 to 0x0006afff...
Flash will be erased from 0x00008000 to 0x00008fff...
Compressed 25424 bytes to 16281...
Writing at 0x00001000... (100 %)
Wrote 25424 bytes (16281 compressed) at 0x00001000 in 0.9 seconds (effective 237.6 kbit/s)...
Hash of data verified.
Compressed 370080 bytes to 215120...
Writing at 0x00010000... (7 %)
Writing at 0x0001abbc... (14 %)
Writing at 0x00026a85... (21 %)
Writing at 0x0002bf91... (28 %)
Writing at 0x0003195d... (35 %)
Writing at 0x00036d6a... (42 %)
Writing at 0x0003c1dd... (50 %)
Writing at 0x0004198e... (57 %)
Writing at 0x00047187... (64 %)
Writing at 0x0004ca7b... (71 %)
Writing at 0x000537c7... (78 %)
Writing at 0x0005ccb0... (85 %)
Writing at 0x00063ea3... (92 %)
Writing at 0x000697d3... (100 %)
Wrote 370080 bytes (215120 compressed) at 0x00010000 in 5.2 seconds (effective 573.6 kbit/s)...
Hash of data verified.
Compressed 3072 bytes to 105...
Writing at 0x00008000... (100 %)
Wrote 3072 bytes (105 compressed) at 0x00008000 in 0.1 seconds (effective 327.8 kbit/s)...
Hash of data verified.

Leaving...
Hard resetting via RTS pin...
