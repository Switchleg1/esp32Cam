[1/11] Performing build step for 'bootloader'
[1/1] cmd.exe /C "cd /D E:\documents\coding\active\esp32cam-idf\build\bootloader\esp-idf\esptool_py && C:\Espressif\python_env\idf5.0_py3.8_env\Scripts\python.exe C:/Espressif/frameworks/esp-idf-v5.0/components/partition_table/check_sizes.py --offset 0x8000 bootloader 0x1000 E:/documents/coding/active/esp32cam-idf/build/bootloader/bootloader.bin"
Bootloader binary size 0x6350 bytes. 0xcb0 bytes (11%) free.
[2/9] Building CXX object esp-idf/main/CMakeFiles/__idf_main.dir/camera.cpp.obj
[3/9] Building CXX object esp-idf/main/CMakeFiles/__idf_main.dir/main.cpp.obj
[4/9] Linking C static library esp-idf\main\libmain.a
[5/9] Generating ld/sections.ld
[6/9] Linking CXX executable esp32cam.elf
[7/9] Generating binary image from built executable
esptool.py v4.4
Creating esp32 image...
Merged 25 ELF sections
Successfully created esp32 image.
Generated E:/documents/coding/active/esp32cam-idf/build/esp32cam.bin
[8/9] cmd.exe /C "cd /D E:\documents\coding\active\esp32cam-idf\build\esp-idf\esptool_py && C:\Espressif\python_env\idf5.0_py3.8_env\Scripts\python.exe C:/Espressif/frameworks/esp-idf-v5.0/components/partition_table/check_sizes.py --offset 0x8000 partition --type app E:/documents/coding/active/esp32cam-idf/build/partition_table/partition-table.bin E:/documents/coding/active/esp32cam-idf/build/esp32cam.bin"
esp32cam.bin binary size 0xe54f0 bytes. Smallest app partition is 0x177000 bytes. 0x91b10 bytes (39%) free.
[8/9] cmd.exe /C "cd /D C:\Espressif\frameworks\esp-idf-v5.0\components\esptool_py && C:\Espressif\tools\cmake\3.24.0\bin\cmake.exe -D IDF_PATH=C:/Espressif/frameworks/esp-idf-v5.0 -D SERIAL_TOOL=C:/Espressif/python_env/idf5.0_py3.8_env/Scripts/python.exe;;C:/Espressif/frameworks/esp-idf-v5.0/components/esptool_py/esptool/esptool.py;--chip;esp32 -D SERIAL_TOOL_ARGS=--before=default_reset;--after=hard_reset;write_flash;@flash_args -D WORKING_DIRECTORY=E:/documents/coding/active/esp32cam-idf/build -P C:/Espressif/frameworks/esp-idf-v5.0/components/esptool_py/run_serial_tool.cmake"
esptool esp32 -p COM10 -b 460800 --before=default_reset --after=hard_reset write_flash --flash_mode dio --flash_freq 80m --flash_size detect 0x1000 bootloader/bootloader.bin 0x10000 esp32cam.bin 0x8000 partition_table/partition-table.bin
esptool.py v4.4
Serial port COM10
Connecting....
Chip is ESP32-D0WD-V3 (revision v3.1)
Features: WiFi, BT, Dual Core, 240MHz, VRef calibration in efuse, Coding Scheme None
Crystal is 40MHz
MAC: e0:5a:1b:d1:8c:34
Uploading stub...
Running stub...
Stub running...
Changing baud rate to 460800
Changed.
Configuring flash size...
Auto-detected Flash size: 4MB
Flash will be erased from 0x00001000 to 0x00007fff...
Flash will be erased from 0x00010000 to 0x000f5fff...
Flash will be erased from 0x00008000 to 0x00008fff...
Compressed 25424 bytes to 16281...
Writing at 0x00001000... (100 %)
Wrote 25424 bytes (16281 compressed) at 0x00001000 in 0.9 seconds (effective 226.9 kbit/s)...
Hash of data verified.
Compressed 939248 bytes to 602971...
Writing at 0x00010000... (2 %)
Writing at 0x0001a9aa... (5 %)
Writing at 0x0002541a... (8 %)
Writing at 0x00030912... (10 %)
Writing at 0x00035ef2... (13 %)
Writing at 0x0003b4a2... (16 %)
Writing at 0x000411bd... (18 %)
Writing at 0x00046250... (21 %)
Writing at 0x0004bc75... (24 %)
Writing at 0x0005184e... (27 %)
Writing at 0x00056ef2... (29 %)
Writing at 0x0005c4b0... (32 %)
Writing at 0x00061b29... (35 %)
Writing at 0x00066db0... (37 %)
Writing at 0x0006d169... (40 %)
Writing at 0x00072cd4... (43 %)
Writing at 0x00078697... (45 %)
Writing at 0x0007e26e... (48 %)
Writing at 0x000838d1... (51 %)
Writing at 0x00088f5e... (54 %)
Writing at 0x0008ea78... (56 %)
Writing at 0x00094359... (59 %)
Writing at 0x0009a2b9... (62 %)
Writing at 0x000a04d9... (64 %)
Writing at 0x000a6556... (67 %)
Writing at 0x000ac4a4... (70 %)
Writing at 0x000b1db9... (72 %)
Writing at 0x000b76d5... (75 %)
Writing at 0x000bd06d... (78 %)
Writing at 0x000c5110... (81 %)
Writing at 0x000cd4e2... (83 %)
Writing at 0x000d51a9... (86 %)
Writing at 0x000dac39... (89 %)
Writing at 0x000e01c6... (91 %)
Writing at 0x000e5cc2... (94 %)
Writing at 0x000eb26c... (97 %)
Writing at 0x000f09ae... (100 %)
Wrote 939248 bytes (602971 compressed) at 0x00010000 in 14.4 seconds (effective 520.5 kbit/s)...
Hash of data verified.
Compressed 3072 bytes to 105...
Writing at 0x00008000... (100 %)
Wrote 3072 bytes (105 compressed) at 0x00008000 in 0.1 seconds (effective 410.4 kbit/s)...
Hash of data verified.

Leaving...
Hard resetting via RTS pin...
